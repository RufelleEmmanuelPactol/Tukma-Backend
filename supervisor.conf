# supervisord.conf

[supervisord]
nodaemon=true                 ; Run supervisord in the foreground
logfile=/dev/null             ; Don't write supervisord log file
logfile_maxbytes=0
pidfile=/tmp/supervisord.pid

[program:gunicorn]
# Command to start Gunicorn
# -w: Number of worker processes (adjust based on your server's CPU cores, e.g., 2*cores + 1)
# -b: Bind address and port. Use 127.0.0.1 (localhost) as only Nginx needs to connect.
# wsgi:app: Assumes your entrypoint file is wsgi.py and the Flask app instance is named 'app'
command=/usr/local/bin/gunicorn --workers 17 --bind 127.0.0.1:8000 app:app
directory=/app                ; Run Gunicorn in the /app directory where Nixpacks puts your code
autostart=true
autorestart=true
redirect_stderr=true          ; Redirect stderr to stdout
stdout_logfile=/dev/stdout    ; Send stdout to container log
stdout_logfile_maxbytes=0     ; Disable log file rotation

[program:nginx]
# Command to start Nginx
# -g 'daemon off;': Run Nginx in the foreground (managed by Supervisor)
# -c /app/nginx.conf: Use the custom Nginx config file from our project root
command=/usr/sbin/nginx -g 'daemon off;' -c /app/nginx.conf
autostart=true
autorestart=true
redirect_stderr=true          ; Redirect stderr to stdout
stdout_logfile=/dev/stdout    ; Send stdout to container log
stdout_logfile_maxbytes=0     ; Disable log file rotation